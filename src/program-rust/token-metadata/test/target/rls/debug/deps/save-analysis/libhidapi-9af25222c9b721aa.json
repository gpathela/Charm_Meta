{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6","program":"/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hidapi","/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"linux-static-hidraw\"","-C","metadata=9af25222c9b721aa","-C","extra-filename=-9af25222c9b721aa","--out-dir","/home/ubuntu/environment/anchorprojects/helloworlds/src/program-rust/token-metadata/test/target/rls/debug/deps","-L","dependency=/home/ubuntu/environment/anchorprojects/helloworlds/src/program-rust/token-metadata/test/target/rls/debug/deps","--extern","libc=/home/ubuntu/environment/anchorprojects/helloworlds/src/program-rust/token-metadata/test/target/rls/debug/deps/liblibc-128f2ab29835403d.rmeta","--cap-lints","allow","-L","native=/lib/x86_64-linux-gnu","-L","native=/home/ubuntu/environment/anchorprojects/helloworlds/src/program-rust/token-metadata/test/target/rls/debug/build/hidapi-a04a560ba0fd1c55/out","-l","udev","-l","static=hidapi","--error-format=json","--sysroot","/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ubuntu/environment/anchorprojects/helloworlds/src/program-rust/token-metadata/test/target/rls/debug/deps/libhidapi-9af25222c9b721aa.rmeta"},"prelude":{"crate_id":{"name":"hidapi","disambiguator":[6110824377181440848,6492593662072807460]},"crate_root":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src","external_crates":[{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[5826329811432288269,9751137331818133462]}}],"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":289,"byte_end":22975,"line_start":7,"line_end":675,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1440,"byte_end":1448,"line_start":54,"line_end":54,"column_start":16,"column_end":24},"alias_span":null,"name":"HidError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":289,"byte_end":22975,"line_start":7,"line_end":675,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":28},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":146},{"krate":0,"index":151},{"krate":0,"index":222},{"krate":0,"index":231},{"krate":0,"index":152},{"krate":0,"index":233},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":259},{"krate":0,"index":154},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181}],"decl_id":null,"docs":" This crate provides a rust abstraction over the features of the C library\n hidapi by [signal11](https://github.com/signal11/hidapi).","sig":null,"attributes":[{"value":"/ This crate provides a rust abstraction over the features of the C library","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":289,"byte_end":366,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ hidapi by [signal11](https://github.com/signal11/hidapi).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":367,"byte_end":428,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":429,"byte_end":432,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":433,"byte_end":444,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":445,"byte_end":448,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate is [on crates.io](https://crates.io/crates/hidapi) and can be","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":449,"byte_end":525,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ used by adding `hidapi` to the dependencies in your project's `Cargo.toml`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":526,"byte_end":605,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":606,"byte_end":609,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":610,"byte_end":623,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":624,"byte_end":627,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":628,"byte_end":646,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ extern crate hidapi;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":647,"byte_end":671,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":672,"byte_end":675,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ use hidapi::HidApi;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":676,"byte_end":699,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":700,"byte_end":703,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":704,"byte_end":719,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     println!(\"Printing all available hid devices:\");","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":720,"byte_end":776,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":777,"byte_end":780,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     match HidApi::new() {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":781,"byte_end":810,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/         Ok(api) => {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":811,"byte_end":835,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/             for device in api.device_list() {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":836,"byte_end":885,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/                 println!(\"{:04x}:{:04x}\", device.vendor_id(), device.product_id());","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":886,"byte_end":973,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/             }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":974,"byte_end":991,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":992,"byte_end":1006,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         Err(e) => {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1007,"byte_end":1030,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/             eprintln!(\"Error: {}\", e);","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1031,"byte_end":1073,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1074,"byte_end":1088,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1089,"byte_end":1098,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1099,"byte_end":1104,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1105,"byte_end":1112,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"allow(deprecated)","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1172,"byte_end":1193,"line_start":39,"line_end":39,"column_start":1,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":199},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23418,"byte_end":23429,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"name":"HidApiError","qualname":"::error::HidError::HidApiError","value":"HidError::HidApiError { message }","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":201},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23455,"byte_end":23480,"line_start":15,"line_end":15,"column_start":5,"column_end":30},"name":"HidApiErrorEmptyWithCause","qualname":"::error::HidError::HidApiErrorEmptyWithCause","value":"HidError::HidApiErrorEmptyWithCause { cause }","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":203},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23526,"byte_end":23542,"line_start":16,"line_end":16,"column_start":5,"column_end":21},"name":"HidApiErrorEmpty","qualname":"::error::HidError::HidApiErrorEmpty","value":"HidError::HidApiErrorEmpty","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":205},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23548,"byte_end":23565,"line_start":17,"line_end":17,"column_start":5,"column_end":22},"name":"FromWideCharError","qualname":"::error::HidError::FromWideCharError","value":"HidError::FromWideCharError { wide_char }","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":207},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23594,"byte_end":23613,"line_start":18,"line_end":18,"column_start":5,"column_end":24},"name":"InitializationError","qualname":"::error::HidError::InitializationError","value":"HidError::InitializationError","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":209},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23619,"byte_end":23637,"line_start":19,"line_end":19,"column_start":5,"column_end":23},"name":"OpenHidDeviceError","qualname":"::error::HidError::OpenHidDeviceError","value":"HidError::OpenHidDeviceError","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":211},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23643,"byte_end":23662,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"InvalidZeroSizeData","qualname":"::error::HidError::InvalidZeroSizeData","value":"HidError::InvalidZeroSizeData","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":213},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23668,"byte_end":23687,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"IncompleteSendError","qualname":"::error::HidError::IncompleteSendError","value":"HidError::IncompleteSendError { sent, all }","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":216},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23721,"byte_end":23741,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"name":"SetBlockingModeError","qualname":"::error::HidError::SetBlockingModeError","value":"HidError::SetBlockingModeError { mode }","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":218},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23770,"byte_end":23802,"line_start":23,"line_end":23,"column_start":5,"column_end":37},"name":"OpenHidDeviceWithDeviceInfoError","qualname":"::error::HidError::OpenHidDeviceWithDeviceInfoError","value":"HidError::OpenHidDeviceWithDeviceInfoError { device_info }","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":198},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23403,"byte_end":23411,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"HidError","qualname":"::error::HidError","value":"pub enum HidError {\n    HidApiError {\n        message: String,\n    },\n    HidApiErrorEmptyWithCause {\n        cause: Box<dyn Error + Send + Sync>,\n    },\n    HidApiErrorEmpty,\n    FromWideCharError {\n        wide_char: wchar_t,\n    },\n    InitializationError,\n    OpenHidDeviceError,\n    InvalidZeroSizeData,\n    IncompleteSendError {\n        sent: usize,\n        all: usize,\n    },\n    SetBlockingModeError {\n        mode: &'static str,\n    },\n    OpenHidDeviceWithDeviceInfoError {\n        device_info: Box<HidDeviceInfo>,\n    },\n}","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1460,"byte_end":1469,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"HidResult","qualname":"::HidResult","value":"Result<T, HidError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2658,"byte_end":2664,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"HidApi","qualname":"::HidApi","value":"HidApi {  }","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" Object for handling hidapi context and implementing RAII for it.\n Only one instance can exist at a time.\n","sig":null,"attributes":[{"value":"/ Object for handling hidapi context and implementing RAII for it.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2535,"byte_end":2603,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ Only one instance can exist at a time.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2604,"byte_end":2646,"line_start":95,"line_end":95,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2972,"byte_end":2975,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<HidApi>::new","value":"pub fn new() -> HidResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the hidapi.","sig":null,"attributes":[{"value":"/ Initializes the hidapi.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2859,"byte_end":2886,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2891,"byte_end":2894,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Will also initialize the currently available device list.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2899,"byte_end":2960,"line_start":107,"line_end":107,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":3432,"byte_end":3447,"line_start":122,"line_end":122,"column_start":12,"column_end":27},"name":"refresh_devices","qualname":"<HidApi>::refresh_devices","value":"pub fn refresh_devices(&mut Self) -> HidResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Refresh devices list and information about them (to access them use\n `device_list()` method)\n","sig":null,"attributes":[{"value":"/ Refresh devices list and information about them (to access them use","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":3317,"byte_end":3388,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ `device_list()` method)","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":3393,"byte_end":3420,"line_start":121,"line_end":121,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4451,"byte_end":4458,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"devices","qualname":"<HidApi>::devices","value":"pub fn devices(&Self) -> &Vec<HidDeviceInfo>","parent":null,"children":[],"decl_id":null,"docs":" Returns vec of objects containing information about connected devices","sig":null,"attributes":[{"value":"/ Returns vec of objects containing information about connected devices","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4283,"byte_end":4356,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4361,"byte_end":4364,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Deprecated. Use `HidApi::device_list()` instead.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4369,"byte_end":4421,"line_start":151,"line_end":151,"column_start":5,"column_end":57}},{"value":"deprecated","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4426,"byte_end":4439,"line_start":152,"line_end":152,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4607,"byte_end":4618,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"device_list","qualname":"<HidApi>::device_list","value":"pub fn device_list(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns iterator containing information about attached HID devices.\n","sig":null,"attributes":[{"value":"/ Returns iterator containing information about attached HID devices.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4524,"byte_end":4595,"line_start":157,"line_end":157,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":5009,"byte_end":5013,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"open","qualname":"<HidApi>::open","value":"pub fn open(&Self, u16, u16) -> HidResult<HidDevice>","parent":null,"children":[],"decl_id":null,"docs":" Open a HID device using a Vendor ID (VID) and Product ID (PID).","sig":null,"attributes":[{"value":"/ Open a HID device using a Vendor ID (VID) and Product ID (PID).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4708,"byte_end":4775,"line_start":162,"line_end":162,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4780,"byte_end":4783,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ When multiple devices with the same vid and pid are available, then the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4788,"byte_end":4863,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/ first one found in the internal device list will be used. There are however","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4868,"byte_end":4947,"line_start":165,"line_end":165,"column_start":5,"column_end":84}},{"value":"/ no guarantees, which device this will be.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":4952,"byte_end":4997,"line_start":166,"line_end":166,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":5502,"byte_end":5513,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"open_serial","qualname":"<HidApi>::open_serial","value":"pub fn open_serial(&Self, u16, u16, &str) -> HidResult<HidDevice>","parent":null,"children":[],"decl_id":null,"docs":" Open a HID device using a Vendor ID (VID), Product ID (PID) and\n a serial number.\n","sig":null,"attributes":[{"value":"/ Open a HID device using a Vendor ID (VID), Product ID (PID) and","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":5398,"byte_end":5465,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/ a serial number.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":5470,"byte_end":5490,"line_start":181,"line_end":181,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":6261,"byte_end":6270,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"open_path","qualname":"<HidApi>::open_path","value":"pub fn open_path(&Self, &CStr) -> HidResult<HidDevice>","parent":null,"children":[],"decl_id":null,"docs":" The path name be determined by inspecting the device list available with [HidApi::devices()](struct.HidApi.html#method.devices)","sig":null,"attributes":[{"value":"/ The path name be determined by inspecting the device list available with [HidApi::devices()](struct.HidApi.html#method.devices)","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":6017,"byte_end":6148,"line_start":196,"line_end":196,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":6153,"byte_end":6156,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Alternatively a platform-specific path name can be used (eg: /dev/hidraw0 on Linux).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":6161,"byte_end":6249,"line_start":198,"line_end":198,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8671,"byte_end":8684,"line_start":286,"line_end":286,"column_start":12,"column_end":25},"name":"HidDeviceInfo","qualname":"::HidDeviceInfo","value":"HidDeviceInfo { path, vendor_id, product_id, serial_number, release_number, manufacturer_string, product_string, usage_page, usage, interface_number }","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"decl_id":null,"docs":" Storage for device related information","sig":null,"attributes":[{"value":"/ Storage for device related information","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8522,"byte_end":8564,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8565,"byte_end":8568,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Deprecated. Use `HidApi::device_list()` instead.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8569,"byte_end":8621,"line_start":283,"line_end":283,"column_start":1,"column_end":53}},{"value":"deprecated","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8646,"byte_end":8659,"line_start":285,"line_end":285,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":234},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8695,"byte_end":8699,"line_start":287,"line_end":287,"column_start":9,"column_end":13},"name":"path","qualname":"::HidDeviceInfo::path","value":"std::ffi::CString","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":235},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8718,"byte_end":8727,"line_start":288,"line_end":288,"column_start":9,"column_end":18},"name":"vendor_id","qualname":"::HidDeviceInfo::vendor_id","value":"u16","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":236},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8742,"byte_end":8752,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"name":"product_id","qualname":"::HidDeviceInfo::product_id","value":"u16","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":237},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8767,"byte_end":8780,"line_start":290,"line_end":290,"column_start":9,"column_end":22},"name":"serial_number","qualname":"::HidDeviceInfo::serial_number","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":238},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8806,"byte_end":8820,"line_start":291,"line_end":291,"column_start":9,"column_end":23},"name":"release_number","qualname":"::HidDeviceInfo::release_number","value":"u16","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":239},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8835,"byte_end":8854,"line_start":292,"line_end":292,"column_start":9,"column_end":28},"name":"manufacturer_string","qualname":"::HidDeviceInfo::manufacturer_string","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":240},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8880,"byte_end":8894,"line_start":293,"line_end":293,"column_start":9,"column_end":23},"name":"product_string","qualname":"::HidDeviceInfo::product_string","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":241},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8920,"byte_end":8930,"line_start":294,"line_end":294,"column_start":9,"column_end":19},"name":"usage_page","qualname":"::HidDeviceInfo::usage_page","value":"u16","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":242},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8945,"byte_end":8950,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"name":"usage","qualname":"::HidDeviceInfo::usage","value":"u16","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":243},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8965,"byte_end":8981,"line_start":296,"line_end":296,"column_start":9,"column_end":25},"name":"interface_number","qualname":"::HidDeviceInfo::interface_number","value":"i32","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9315,"byte_end":9325,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"DeviceInfo","qualname":"::DeviceInfo","value":"DeviceInfo {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" Device information. Use accessors to extract information about Hid devices.","sig":null,"attributes":[{"value":"/ Device information. Use accessors to extract information about Hid devices.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8991,"byte_end":9070,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9071,"byte_end":9074,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ Note: Methods like `serial_number()` may return None, if the conversion to a","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9075,"byte_end":9155,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/ String failed internally. You can however access the raw hid representation of the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9156,"byte_end":9242,"line_start":302,"line_end":302,"column_start":1,"column_end":87}},{"value":"/ string by calling `serial_number_raw()`","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9243,"byte_end":9286,"line_start":303,"line_end":303,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9612,"byte_end":9616,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"path","qualname":"<DeviceInfo>::path","value":"pub fn path(&Self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9671,"byte_end":9680,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"vendor_id","qualname":"<DeviceInfo>::vendor_id","value":"pub fn vendor_id(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9737,"byte_end":9747,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"product_id","qualname":"<DeviceInfo>::product_id","value":"pub fn product_id(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9870,"byte_end":9883,"line_start":330,"line_end":330,"column_start":12,"column_end":25},"name":"serial_number","qualname":"<DeviceInfo>::serial_number","value":"pub fn serial_number(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Try to call `serial_number_raw()`, if None is returned.\n","sig":null,"attributes":[{"value":"/ Try to call `serial_number_raw()`, if None is returned.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9799,"byte_end":9858,"line_start":329,"line_end":329,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10045,"byte_end":10062,"line_start":336,"line_end":336,"column_start":12,"column_end":29},"name":"serial_number_raw","qualname":"<DeviceInfo>::serial_number_raw","value":"pub fn serial_number_raw(&Self) -> Option<&[wchar_t]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10228,"byte_end":10242,"line_start":343,"line_end":343,"column_start":12,"column_end":26},"name":"release_number","qualname":"<DeviceInfo>::release_number","value":"pub fn release_number(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10375,"byte_end":10394,"line_start":348,"line_end":348,"column_start":12,"column_end":31},"name":"manufacturer_string","qualname":"<DeviceInfo>::manufacturer_string","value":"pub fn manufacturer_string(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Try to call `manufacturer_string_raw()`, if None is returned.\n","sig":null,"attributes":[{"value":"/ Try to call `manufacturer_string_raw()`, if None is returned.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10298,"byte_end":10363,"line_start":347,"line_end":347,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10562,"byte_end":10585,"line_start":354,"line_end":354,"column_start":12,"column_end":35},"name":"manufacturer_string_raw","qualname":"<DeviceInfo>::manufacturer_string_raw","value":"pub fn manufacturer_string_raw(&Self) -> Option<&[wchar_t]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10822,"byte_end":10836,"line_start":362,"line_end":362,"column_start":12,"column_end":26},"name":"product_string","qualname":"<DeviceInfo>::product_string","value":"pub fn product_string(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Try to call `product_string_raw()`, if None is returned.\n","sig":null,"attributes":[{"value":"/ Try to call `product_string_raw()`, if None is returned.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10750,"byte_end":10810,"line_start":361,"line_end":361,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":10999,"byte_end":11017,"line_start":368,"line_end":368,"column_start":12,"column_end":30},"name":"product_string_raw","qualname":"<DeviceInfo>::product_string_raw","value":"pub fn product_string_raw(&Self) -> Option<&[wchar_t]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11184,"byte_end":11194,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"usage_page","qualname":"<DeviceInfo>::usage_page","value":"pub fn usage_page(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11252,"byte_end":11257,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"usage","qualname":"<DeviceInfo>::usage","value":"pub fn usage(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11310,"byte_end":11326,"line_start":381,"line_end":381,"column_start":12,"column_end":28},"name":"interface_number","qualname":"<DeviceInfo>::interface_number","value":"pub fn interface_number(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":12006,"byte_end":12017,"line_start":394,"line_end":394,"column_start":12,"column_end":23},"name":"open_device","qualname":"<DeviceInfo>::open_device","value":"pub fn open_device(&Self, &HidApi) -> HidResult<HidDevice>","parent":null,"children":[],"decl_id":null,"docs":" Use the information contained in `DeviceInfo` to open\n and return a handle to a [HidDevice](struct.HidDevice.html).","sig":null,"attributes":[{"value":"/ Use the information contained in `DeviceInfo` to open","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11384,"byte_end":11441,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ and return a handle to a [HidDevice](struct.HidDevice.html).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11446,"byte_end":11510,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11515,"byte_end":11518,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ By default the device path is used to open the device.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11523,"byte_end":11581,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ When no path is available, then vid, pid and serial number are used.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11586,"byte_end":11658,"line_start":389,"line_end":389,"column_start":5,"column_end":77}},{"value":"/ If both path and serial number are not available, then this function will","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11663,"byte_end":11740,"line_start":390,"line_end":390,"column_start":5,"column_end":82}},{"value":"/ fail with [HidError::OpenHidDeviceWithDeviceInfoError](enum.HidError.html#variant.OpenHidDeviceWithDeviceInfoError).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11745,"byte_end":11865,"line_start":391,"line_end":391,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11870,"byte_end":11873,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Note, that opening a device could still be done using [HidApi::open()](struct.HidApi.html#method.open) directly.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":11878,"byte_end":11994,"line_start":393,"line_end":393,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14241,"byte_end":14252,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"open_device","qualname":"<HidDeviceInfo>::open_device","value":"pub fn open_device(&Self, &HidApi) -> HidResult<HidDevice>","parent":null,"children":[],"decl_id":null,"docs":" Use the information contained in `HidDeviceInfo` to open\n and return a handle to a [HidDevice](struct.HidDevice.html).","sig":null,"attributes":[{"value":"/ Use the information contained in `HidDeviceInfo` to open","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13616,"byte_end":13676,"line_start":443,"line_end":443,"column_start":5,"column_end":65}},{"value":"/ and return a handle to a [HidDevice](struct.HidDevice.html).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13681,"byte_end":13745,"line_start":444,"line_end":444,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13750,"byte_end":13753,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ By default the device path is used to open the device.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13758,"byte_end":13816,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/ When no path is available, then vid, pid and serial number are used.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13821,"byte_end":13893,"line_start":447,"line_end":447,"column_start":5,"column_end":77}},{"value":"/ If both path and serial number are not available, then this function will","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13898,"byte_end":13975,"line_start":448,"line_end":448,"column_start":5,"column_end":82}},{"value":"/ fail with [HidError::OpenHidDeviceWithDeviceInfoError](enum.HidError.html#variant.OpenHidDeviceWithDeviceInfoError).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13980,"byte_end":14100,"line_start":449,"line_end":449,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14105,"byte_end":14108,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Note, that opening a device could still be done using [HidApi::open()](struct.HidApi.html#method.open) directly.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14113,"byte_end":14229,"line_start":451,"line_end":451,"column_start":5,"column_end":121}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14737,"byte_end":14746,"line_start":466,"line_end":466,"column_start":12,"column_end":21},"name":"HidDevice","qualname":"::HidDevice","value":"HidDevice {  }","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Object for accessing HID device\n","sig":null,"attributes":[{"value":"/ Object for accessing HID device","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14690,"byte_end":14725,"line_start":465,"line_end":465,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15966,"byte_end":15977,"line_start":504,"line_end":504,"column_start":12,"column_end":23},"name":"check_error","qualname":"<HidDevice>::check_error","value":"pub fn check_error(&Self) -> HidResult<HidError>","parent":null,"children":[],"decl_id":null,"docs":" Get the last error, which happened in the underlying hidapi C library.","sig":null,"attributes":[{"value":"/ Get the last error, which happened in the underlying hidapi C library.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15557,"byte_end":15631,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15636,"byte_end":15639,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ The `Ok()` variant of the result will contain a [HidError::HidApiError](enum.HidError.html).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15644,"byte_end":15740,"line_start":499,"line_end":499,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15745,"byte_end":15748,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ When `Err()` is returned, then acquiring the error string from the hidapi C","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15753,"byte_end":15832,"line_start":501,"line_end":501,"column_start":5,"column_end":84}},{"value":"/ library failed. The contained [HidError](enum.HidError.html) is the cause, why no error could","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15837,"byte_end":15934,"line_start":502,"line_end":502,"column_start":5,"column_end":102}},{"value":"/ be fetched.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15939,"byte_end":15954,"line_start":503,"line_end":503,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17091,"byte_end":17096,"line_start":527,"line_end":527,"column_start":12,"column_end":17},"name":"write","qualname":"<HidDevice>::write","value":"pub fn write(&Self, &[u8]) -> HidResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" The first byte of `data` must contain the Report ID. For\n devices which only support a single report, this must be set\n to 0x0. The remaining bytes contain the report data. Since\n the Report ID is mandatory, calls to `write()` will always\n contain one more byte than the report contains. For example,\n if a hid report is 16 bytes long, 17 bytes must be passed to\n `write()`, the Report ID (or 0x0, for devices with a\n single report), followed by the report data (16 bytes). In\n this example, the length passed in would be 17.\n `write()` will send the data on the first OUT endpoint, if\n one exists. If it does not, it will send the data through\n the Control Endpoint (Endpoint 0).\n","sig":null,"attributes":[{"value":"/ The first byte of `data` must contain the Report ID. For","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16318,"byte_end":16378,"line_start":515,"line_end":515,"column_start":5,"column_end":65}},{"value":"/ devices which only support a single report, this must be set","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16383,"byte_end":16447,"line_start":516,"line_end":516,"column_start":5,"column_end":69}},{"value":"/ to 0x0. The remaining bytes contain the report data. Since","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16452,"byte_end":16514,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/ the Report ID is mandatory, calls to `write()` will always","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16519,"byte_end":16581,"line_start":518,"line_end":518,"column_start":5,"column_end":67}},{"value":"/ contain one more byte than the report contains. For example,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16586,"byte_end":16650,"line_start":519,"line_end":519,"column_start":5,"column_end":69}},{"value":"/ if a hid report is 16 bytes long, 17 bytes must be passed to","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16655,"byte_end":16719,"line_start":520,"line_end":520,"column_start":5,"column_end":69}},{"value":"/ `write()`, the Report ID (or 0x0, for devices with a","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16724,"byte_end":16780,"line_start":521,"line_end":521,"column_start":5,"column_end":61}},{"value":"/ single report), followed by the report data (16 bytes). In","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16785,"byte_end":16847,"line_start":522,"line_end":522,"column_start":5,"column_end":67}},{"value":"/ this example, the length passed in would be 17.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16852,"byte_end":16903,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ `write()` will send the data on the first OUT endpoint, if","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16908,"byte_end":16970,"line_start":524,"line_end":524,"column_start":5,"column_end":67}},{"value":"/ one exists. If it does not, it will send the data through","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":16975,"byte_end":17036,"line_start":525,"line_end":525,"column_start":5,"column_end":66}},{"value":"/ the Control Endpoint (Endpoint 0).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17041,"byte_end":17079,"line_start":526,"line_end":526,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17563,"byte_end":17567,"line_start":538,"line_end":538,"column_start":12,"column_end":16},"name":"read","qualname":"<HidDevice>::read","value":"pub fn read(&Self, &mut [u8]) -> HidResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Input reports are returned to the host through the 'INTERRUPT IN'\n endpoint. The first byte will contain the Report number if the device\n uses numbered reports.\n","sig":null,"attributes":[{"value":"/ Input reports are returned to the host through the 'INTERRUPT IN'","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17373,"byte_end":17442,"line_start":535,"line_end":535,"column_start":5,"column_end":74}},{"value":"/ endpoint. The first byte will contain the Report number if the device","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17447,"byte_end":17520,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ uses numbered reports.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17525,"byte_end":17551,"line_start":537,"line_end":537,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18012,"byte_end":18024,"line_start":547,"line_end":547,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<HidDevice>::read_timeout","value":"pub fn read_timeout(&Self, &mut [u8], i32) -> HidResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Input reports are returned to the host through the 'INTERRUPT IN'\n endpoint. The first byte will contain the Report number if the device\n uses numbered reports. Timeout measured in milliseconds, set -1 for\n blocking wait.\n","sig":null,"attributes":[{"value":"/ Input reports are returned to the host through the 'INTERRUPT IN'","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17754,"byte_end":17823,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ endpoint. The first byte will contain the Report number if the device","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17828,"byte_end":17901,"line_start":544,"line_end":544,"column_start":5,"column_end":78}},{"value":"/ uses numbered reports. Timeout measured in milliseconds, set -1 for","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17906,"byte_end":17977,"line_start":545,"line_end":545,"column_start":5,"column_end":76}},{"value":"/ blocking wait.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":17982,"byte_end":18000,"line_start":546,"line_end":546,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":19116,"byte_end":19135,"line_start":570,"line_end":570,"column_start":12,"column_end":31},"name":"send_feature_report","qualname":"<HidDevice>::send_feature_report","value":"pub fn send_feature_report(&Self, &[u8]) -> HidResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a Feature report to the device.\n Feature reports are sent over the Control endpoint as a\n Set_Report transfer.  The first byte of `data` must contain the\n 'Report ID'. For devices which only support a single report, this must\n be set to 0x0. The remaining bytes contain the report data. Since the\n 'Report ID' is mandatory, calls to `send_feature_report()` will always\n contain one more byte than the report contains. For example, if a hid\n report is 16 bytes long, 17 bytes must be passed to\n `send_feature_report()`: 'the Report ID' (or 0x0, for devices which\n do not use numbered reports), followed by the report data (16 bytes).\n In this example, the length passed in would be 17.\n","sig":null,"attributes":[{"value":"/ Send a Feature report to the device.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18341,"byte_end":18381,"line_start":559,"line_end":559,"column_start":5,"column_end":45}},{"value":"/ Feature reports are sent over the Control endpoint as a","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18386,"byte_end":18445,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/ Set_Report transfer.  The first byte of `data` must contain the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18450,"byte_end":18517,"line_start":561,"line_end":561,"column_start":5,"column_end":72}},{"value":"/ 'Report ID'. For devices which only support a single report, this must","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18522,"byte_end":18596,"line_start":562,"line_end":562,"column_start":5,"column_end":79}},{"value":"/ be set to 0x0. The remaining bytes contain the report data. Since the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18601,"byte_end":18674,"line_start":563,"line_end":563,"column_start":5,"column_end":78}},{"value":"/ 'Report ID' is mandatory, calls to `send_feature_report()` will always","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18679,"byte_end":18753,"line_start":564,"line_end":564,"column_start":5,"column_end":79}},{"value":"/ contain one more byte than the report contains. For example, if a hid","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18758,"byte_end":18831,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ report is 16 bytes long, 17 bytes must be passed to","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18836,"byte_end":18891,"line_start":566,"line_end":566,"column_start":5,"column_end":60}},{"value":"/ `send_feature_report()`: 'the Report ID' (or 0x0, for devices which","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18896,"byte_end":18967,"line_start":567,"line_end":567,"column_start":5,"column_end":76}},{"value":"/ do not use numbered reports), followed by the report data (16 bytes).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":18972,"byte_end":19045,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ In this example, the length passed in would be 17.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":19050,"byte_end":19104,"line_start":569,"line_end":569,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":19863,"byte_end":19881,"line_start":591,"line_end":591,"column_start":12,"column_end":30},"name":"get_feature_report","qualname":"<HidDevice>::get_feature_report","value":"pub fn get_feature_report(&Self, &mut [u8]) -> HidResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Set the first byte of `buf` to the 'Report ID' of the report to be read.\n Upon return, the first byte will still contain the Report ID, and the\n report data will start in buf[1].\n","sig":null,"attributes":[{"value":"/ Set the first byte of `buf` to the 'Report ID' of the report to be read.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":19655,"byte_end":19731,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/ Upon return, the first byte will still contain the Report ID, and the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":19736,"byte_end":19809,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/ report data will start in buf[1].","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":19814,"byte_end":19851,"line_start":590,"line_end":590,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20454,"byte_end":20471,"line_start":603,"line_end":603,"column_start":12,"column_end":29},"name":"set_blocking_mode","qualname":"<HidDevice>::set_blocking_mode","value":"pub fn set_blocking_mode(&Self, bool) -> HidResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the device handle to be in blocking or in non-blocking mode. In\n non-blocking mode calls to `read()` will return immediately with an empty\n slice if there is no data to be read. In blocking mode, `read()` will\n wait (block) until there is data to read before returning.\n Modes can be changed at any time.\n","sig":null,"attributes":[{"value":"/ Set the device handle to be in blocking or in non-blocking mode. In","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20102,"byte_end":20173,"line_start":598,"line_end":598,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode calls to `read()` will return immediately with an empty","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20178,"byte_end":20255,"line_start":599,"line_end":599,"column_start":5,"column_end":82}},{"value":"/ slice if there is no data to be read. In blocking mode, `read()` will","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20260,"byte_end":20333,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/ wait (block) until there is data to read before returning.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20338,"byte_end":20400,"line_start":601,"line_end":601,"column_start":5,"column_end":67}},{"value":"/ Modes can be changed at any time.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20405,"byte_end":20442,"line_start":602,"line_end":602,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20992,"byte_end":21015,"line_start":620,"line_end":620,"column_start":12,"column_end":35},"name":"get_manufacturer_string","qualname":"<HidDevice>::get_manufacturer_string","value":"pub fn get_manufacturer_string(&Self) -> HidResult<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Get The Manufacturer String from a HID device.\n","sig":null,"attributes":[{"value":"/ Get The Manufacturer String from a HID device.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":20930,"byte_end":20980,"line_start":619,"line_end":619,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":21497,"byte_end":21515,"line_start":634,"line_end":634,"column_start":12,"column_end":30},"name":"get_product_string","qualname":"<HidDevice>::get_product_string","value":"pub fn get_product_string(&Self) -> HidResult<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Get The Manufacturer String from a HID device.\n","sig":null,"attributes":[{"value":"/ Get The Manufacturer String from a HID device.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":21435,"byte_end":21485,"line_start":633,"line_end":633,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":21993,"byte_end":22017,"line_start":648,"line_end":648,"column_start":12,"column_end":36},"name":"get_serial_number_string","qualname":"<HidDevice>::get_serial_number_string","value":"pub fn get_serial_number_string(&Self) -> HidResult<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Get The Serial Number String from a HID device.\n","sig":null,"attributes":[{"value":"/ Get The Serial Number String from a HID device.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":21930,"byte_end":21981,"line_start":647,"line_end":647,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":22512,"byte_end":22530,"line_start":662,"line_end":662,"column_start":12,"column_end":30},"name":"get_indexed_string","qualname":"<HidDevice>::get_indexed_string","value":"pub fn get_indexed_string(&Self, i32) -> HidResult<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Get a string from a HID device, based on its string index.\n","sig":null,"attributes":[{"value":"/ Get a string from a HID device, based on its string index.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":22438,"byte_end":22500,"line_start":661,"line_end":661,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23860,"byte_end":23868,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":25350,"byte_end":25358,"line_start":59,"line_end":59,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1722,"byte_end":1732,"line_start":64,"line_end":64,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2379,"byte_end":2389,"line_start":85,"line_end":85,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2846,"byte_end":2852,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8360,"byte_end":8371,"line_start":272,"line_end":272,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9588,"byte_end":9598,"line_start":318,"line_end":318,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":12484,"byte_end":12494,"line_start":407,"line_end":407,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":12760,"byte_end":12770,"line_start":416,"line_end":416,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13596,"byte_end":13609,"line_start":442,"line_end":442,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14923,"byte_end":14932,"line_start":472,"line_end":472,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14951,"byte_end":14960,"line_start":474,"line_end":474,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15125,"byte_end":15134,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":23860,"byte_end":23868,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/error.rs","byte_start":25350,"byte_end":25358,"line_start":59,"line_end":59,"column_start":16,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":198},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":1722,"byte_end":1732,"line_start":64,"line_end":64,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2379,"byte_end":2389,"line_start":85,"line_end":85,"column_start":15,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":2846,"byte_end":2852,"line_start":104,"line_end":104,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":8360,"byte_end":8371,"line_start":272,"line_end":272,"column_start":31,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":222},"to":{"krate":2,"index":2756}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":9588,"byte_end":9598,"line_start":318,"line_end":318,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":12484,"byte_end":12494,"line_start":407,"line_end":407,"column_start":21,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":12760,"byte_end":12770,"line_start":416,"line_end":416,"column_start":30,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":2756}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":13596,"byte_end":13609,"line_start":442,"line_end":442,"column_start":6,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14923,"byte_end":14932,"line_start":472,"line_end":472,"column_start":22,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":14951,"byte_end":14960,"line_start":474,"line_end":474,"column_start":15,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/hidapi-1.2.6/src/lib.rs","byte_start":15125,"byte_end":15134,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}}]}